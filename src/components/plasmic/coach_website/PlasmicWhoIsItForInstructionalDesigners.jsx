// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: uu5v5CefeBFWJ3g58RuWZW
// Component: YL4LSeLth1y
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import MenuHeaderDesktop from "../../MenuHeaderDesktop"; // plasmic-import: RhmfQLZ342T/component
import Footer from "../../Footer"; // plasmic-import: 0UCZXj9Zumd/component
import { useScreenVariants as useScreenVariantsaAzWhvm6PjSv1 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aAzWHVM6PJSv1/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_coach_website.module.css"; // plasmic-import: uu5v5CefeBFWJ3g58RuWZW/projectcss
import sty from "./PlasmicWhoIsItForInstructionalDesigners.module.css"; // plasmic-import: YL4LSeLth1y/css
import whoitsforBg1PngUn0YXaAyX from "./images/whoitsforBg1Png.png"; // plasmic-import: un0yXAAyX/picture
import buttonCaretWhitesvg2S5Jbv6HmTb from "./images/buttonCaretWhitesvg2.svg"; // plasmic-import: S5jbv6HmTb/picture
import whoitsforBg2Png6Ezsola4F from "./images/whoitsforBg2Png.png"; // plasmic-import: 6Ezsola4F/picture
import coachIdssvgXKnk6Mzl8 from "./images/coachIdssvg.svg"; // plasmic-import: xKNK6mzl8/picture
import webManagers1PngEkDydkqcZ from "./images/webManagers1Png.png"; // plasmic-import: ekDydkqcZ/picture
import webIds2Png7AgOnzeC from "./images/webIds2Png.png"; // plasmic-import: 7ag-onzeC/picture
import webIds3PngAN3LM3Rqx from "./images/webIds3Png.png"; // plasmic-import: aN3lM3Rqx/picture
import webIds4PngX65PLRm6O from "./images/webIds4Png.png"; // plasmic-import: X65pLRm6O/picture
import phoneCutIdspngDSxS101Bd from "./images/phoneCutIdspng.png"; // plasmic-import: dSxS101BD/picture

export const PlasmicWhoIsItForInstructionalDesigners__VariantProps =
  new Array();

export const PlasmicWhoIsItForInstructionalDesigners__ArgProps = new Array();

function PlasmicWhoIsItForInstructionalDesigners__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaAzWhvm6PjSv1()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <MenuHeaderDesktop
            data-plasmic-name={"menuHeaderDesktop"}
            data-plasmic-override={overrides.menuHeaderDesktop}
            className={classNames("__wab_instance", sty.menuHeaderDesktop)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div className={classNames(projectcss.all, sty.columns__jqVHk)}>
              <div className={classNames(projectcss.all, sty.column__o8UB)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___48Sp8)}
                  displayHeight={"280px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: whoitsforBg1PngUn0YXaAyX,
                    fullWidth: 507,
                    fullHeight: 667,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column___0FDEq)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__lGcO)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___3VgwN)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sEaL4
                      )}
                    >
                      {"COACH FOR INSTRUCTIONAL DESIGNERS"}
                    </div>

                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "The training tool \nthat helps you learn"
                        : "Build trainings that employees (and CEOs) love, fast"}
                    </h1>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hOkik
                    )}
                  >
                    {
                      "The all-in-one tool for microlearning, adaptive learning\nand spaced repetition!"
                    }
                  </div>

                  <p.Stack
                    as={"button"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      sty.button__pNrD5
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sUcLu
                      )}
                    >
                      {"GET STARTED"}
                    </div>

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__m2L2)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"15px"}
                      loading={"lazy"}
                      src={{
                        src: buttonCaretWhitesvg2S5Jbv6HmTb,
                        fullWidth: 108,
                        fullHeight: 150,
                        aspectRatio: 0.722222
                      }}
                    />
                  </p.Stack>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__vViCg)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mwSd)}
                  displayHeight={"280px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: whoitsforBg2Png6Ezsola4F,
                    fullWidth: 482,
                    fullHeight: 667,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__nFon2)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"285px"}
              loading={"lazy"}
              src={{
                src: coachIdssvgXKnk6Mzl8,
                fullWidth: 203,
                fullHeight: 150,
                aspectRatio: 1.354839
              }}
            />
          </p.Stack>

          <div
            data-plasmic-name={"section2"}
            data-plasmic-override={overrides.section2}
            className={classNames(projectcss.all, sty.section2)}
          >
            <div className={classNames(projectcss.all, sty.columns__jfBx)}>
              <div className={classNames(projectcss.all, sty.column__kCfDx)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___80VS4
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {"Instructional Designers say it’s their "}
                    </React.Fragment>

                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"new\n ‘right-hand’ tool"}
                    </span>

                    <React.Fragment>{" these days!"}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__sQ6WX)} />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__dyN4T)}
            >
              <div className={classNames(projectcss.all, sty.column___1SS1)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gi4U2)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___53TjB)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"400px"}
                    loading={"lazy"}
                    src={{
                      src: webManagers1PngEkDydkqcZ,
                      fullWidth: 761,
                      fullHeight: 561,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___11Rj
                    )}
                  >
                    {"Easy-to-use and fast to create trainings"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f9Hid
                    )}
                  >
                    {
                      "Coach allows you to create trainings fast, without the need of extra tech skills. Just as easy and simple as using an Excel document. "
                    }
                  </div>
                </p.Stack>
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__tClpx)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xrX8S)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__eCuHm)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"400px"}
                    loading={"lazy"}
                    src={{
                      src: webIds2Png7AgOnzeC,
                      fullWidth: 761,
                      fullHeight: 561,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w6BWf
                    )}
                  >
                    {"Understand how people respond to your trainings"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aadYo
                    )}
                  >
                    {
                      "Get feedback from learners to continuously improve your trainings. Coach’s integrated feedback system allows each employee to leave feedback regards the training you’ve built. The more you know, the better your trainings will become!"
                    }
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__v0RKl)}
            >
              <div className={classNames(projectcss.all, sty.column__hX7VO)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ptBlH)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___0SGWu)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"400px"}
                    loading={"lazy"}
                    src={{
                      src: webIds3PngAN3LM3Rqx,
                      fullWidth: 760,
                      fullHeight: 561,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oOzPz
                    )}
                  >
                    {"Employees who love your trainings"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hv29F
                    )}
                  >
                    {
                      "Personalization on another level! Coach’s smart system recognises every employee’s knowledge gap and fills the void with content they actually need!"
                    }
                  </div>
                </p.Stack>
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___3P75)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__w9RWu)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ijHUp)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"400px"}
                    loading={"lazy"}
                    src={{
                      src: webIds4PngX65PLRm6O,
                      fullWidth: 761,
                      fullHeight: 561,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nY6Vq
                    )}
                  >
                    {"Knowledgeable employees, happy managers & CEOs"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pnhU2
                    )}
                  >
                    {
                      "Knowledgeable employees work better - which ultimately means better results and bigger profits. And who doesn’t love profits! \nI bet CEOs do 😉 "
                    }
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__akNe)} />

          <div className={classNames(projectcss.all, sty.freeBox__rpcId)}>
            <div className={classNames(projectcss.all, sty.freeBox__lUh5O)}>
              <div className={classNames(projectcss.all, sty.columns__amQf)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__utCa)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dtN5O
                    )}
                  >
                    {"READY TO START?"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l3Ckq
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Don’t just take our word.\nExperience the power of Coach yourself, and see the possibilities."
                      : "Get in on the action today, and see\nwhy Coach will become your go-to\ntool for building effective trainings."}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__aSuoZ)}
                  >
                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button__reojZ
                      )}
                    >
                      {"BOOK A DEMO"}
                    </button>

                    <p.Stack
                      as={"button"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        sty.button__qBw3R
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xcRp9
                        )}
                      >
                        {"GET STARTED"}
                      </div>

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__e8Kij)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"15px"}
                        loading={"lazy"}
                        src={{
                          src: buttonCaretWhitesvg2S5Jbv6HmTb,
                          fullWidth: 108,
                          fullHeight: 150,
                          aspectRatio: 0.722222
                        }}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>

                <div className={classNames(projectcss.all, sty.column__jKO9)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ifSla)}
                    displayHeight={"100%"}
                    displayMaxHeight={"100%"}
                    displayMaxWidth={"220px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: phoneCutIdspngDSxS101Bd,
                      fullWidth: 430,
                      fullHeight: 743,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </div>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "menuHeaderDesktop", "hero", "h1", "section2", "footer"],
  menuHeaderDesktop: ["menuHeaderDesktop"],
  hero: ["hero", "h1"],
  h1: ["h1"],
  section2: ["section2"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames:
            PlasmicWhoIsItForInstructionalDesigners__ArgProps,
          internalVariantPropNames:
            PlasmicWhoIsItForInstructionalDesigners__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicWhoIsItForInstructionalDesigners__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicWhoIsItForInstructionalDesigners";
  } else {
    func.displayName = `PlasmicWhoIsItForInstructionalDesigners.${nodeName}`;
  }
  return func;
}

export const PlasmicWhoIsItForInstructionalDesigners = Object.assign(
  // Top-level PlasmicWhoIsItForInstructionalDesigners renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    menuHeaderDesktop: makeNodeComponent("menuHeaderDesktop"),
    hero: makeNodeComponent("hero"),
    h1: makeNodeComponent("h1"),
    section2: makeNodeComponent("section2"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicWhoIsItForInstructionalDesigners
    internalVariantProps: PlasmicWhoIsItForInstructionalDesigners__VariantProps,
    internalArgProps: PlasmicWhoIsItForInstructionalDesigners__ArgProps
  }
);

export default PlasmicWhoIsItForInstructionalDesigners;
/* prettier-ignore-end */
