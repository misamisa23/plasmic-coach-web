// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: uu5v5CefeBFWJ3g58RuWZW
// Component: DlUpeRRY4J
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import MenuHeaderDesktop from "../../MenuHeaderDesktop"; // plasmic-import: RhmfQLZ342T/component
import Footer from "../../Footer"; // plasmic-import: 0UCZXj9Zumd/component
import { useScreenVariants as useScreenVariantsaAzWhvm6PjSv1 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aAzWHVM6PJSv1/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_coach_website.module.css"; // plasmic-import: uu5v5CefeBFWJ3g58RuWZW/projectcss
import sty from "./PlasmicWhoIsItForManagers.module.css"; // plasmic-import: DlUpeRRY4J/css
import coachManagerssvgRqDhaxaBv from "./images/coachManagerssvg.svg"; // plasmic-import: RqDhaxaBV/picture
import webManagers1PngEkDydkqcZ from "./images/webManagers1Png.png"; // plasmic-import: ekDydkqcZ/picture
import webManagers2PngX6MBdPqxW from "./images/webManagers2Png.png"; // plasmic-import: X6mBDPqxW/picture
import webManagers3Png2WLHdfo from "./images/webManagers3Png.png"; // plasmic-import: 2_wLHdfo_/picture
import webManagers4PngQ36Wj7Su7 from "./images/webManagers4Png.png"; // plasmic-import: q36Wj7Su7/picture
import phoneCutManagerspngRiB9WdHzJ from "./images/phoneCutManagerspng.png"; // plasmic-import: RiB9WdHzJ/picture

export const PlasmicWhoIsItForManagers__VariantProps = new Array();

export const PlasmicWhoIsItForManagers__ArgProps = new Array();

function PlasmicWhoIsItForManagers__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaAzWhvm6PjSv1()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <MenuHeaderDesktop
            data-plasmic-name={"menuHeaderDesktop"}
            data-plasmic-override={overrides.menuHeaderDesktop}
            className={classNames("__wab_instance", sty.menuHeaderDesktop)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vb2Eb
              )}
            >
              {"COACH FOR MANAGERS (HR, L&D, People, Training)"}
            </div>

            <h1
              data-plasmic-name={"h1"}
              data-plasmic-override={overrides.h1}
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1
              )}
            >
              {"Provide employees the\ntraining they deserve"}
            </h1>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__g3EnZ
              )}
            >
              {"Keep employees motivated\nand get better evaluation results!"}
            </div>

            <button
              className={classNames(
                projectcss.all,
                projectcss.button,
                projectcss.__wab_text,
                sty.button__mpGQp
              )}
            >
              {"GET STARTED"}
            </button>

            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__l7L3R)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"263px"}
                loading={"lazy"}
                src={{
                  src: coachManagerssvgRqDhaxaBv,
                  fullWidth: 203,
                  fullHeight: 150,
                  aspectRatio: 1.354839
                }}
              />
            ) : null}
          </p.Stack>

          <div className={classNames(projectcss.all, sty.freeBox__ovCxv)}>
            <div className={classNames(projectcss.all, sty.freeBox___9LfNz)}>
              <div className={classNames(projectcss.all, sty.columns__uw5Bf)}>
                <div className={classNames(projectcss.all, sty.column__ix0AA)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eMw
                    )}
                  >
                    {
                      "Coach delivers insights into the knowledge your employees get from your trainings, and helps you improve them!"
                    }
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"section2"}
            data-plasmic-override={overrides.section2}
            className={classNames(projectcss.all, sty.section2)}
          >
            <div className={classNames(projectcss.all, sty.columns__cAJtt)}>
              <div className={classNames(projectcss.all, sty.column__gvAsN)}>
                <div className={classNames(projectcss.all, sty.freeBox__f0XRm)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___5Jr5R)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: webManagers1PngEkDydkqcZ,
                      fullWidth: 761,
                      fullHeight: 561,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tH6A
                    )}
                  >
                    {"Save time on training creation"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qLXd
                    )}
                  >
                    {
                      "Coach is here to save your time - so you can spend it where you need it the most. That’s our singular focus."
                    }
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column___8GnC)}>
                <div className={classNames(projectcss.all, sty.freeBox__t6XMc)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__znBfI)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: webManagers2PngX6MBdPqxW,
                      fullWidth: 761,
                      fullHeight: 561,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fgK9I
                    )}
                  >
                    {"Stay aware of employees’\nknowledge gaps"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p9YBm
                    )}
                  >
                    {
                      "What you think your employees have learned from their training, isn't what it actually looks like. To really understand the knowledge acquired, Coach does the hard work for you."
                    }
                  </div>
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.columns__whkYi)}>
              <div className={classNames(projectcss.all, sty.column__xfoCx)}>
                <div className={classNames(projectcss.all, sty.freeBox__qUqxc)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___59S8M)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: webManagers3Png2WLHdfo,
                      fullWidth: 761,
                      fullHeight: 561,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6LTrb
                    )}
                  >
                    {"Keep employees motivated and engaged "}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pvDJb
                    )}
                  >
                    {
                      "Building a fun working environment that is also productive is a challenge. A fun one, though! Coach lets you tap into the power of play and stimulate employees’ learning retention and improve company culture."
                    }
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__pbuWp)}>
                <div className={classNames(projectcss.all, sty.freeBox__hEs4)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__c1Hwa)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: webManagers4PngQ36Wj7Su7,
                      fullWidth: 761,
                      fullHeight: 561,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eq769
                    )}
                  >
                    {"Insights and reports like flashlights"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nXhk8
                    )}
                  >
                    {
                      "Create beautiful custom reports that executives don't need a PhD to understand. Analyze your training reports and assign additional lessons to employees with knowledge gaps. Because knowledgeable teams make happy clients."
                    }
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__n5WHu)}>
            <div className={classNames(projectcss.all, sty.freeBox__eYx9Y)}>
              <div className={classNames(projectcss.all, sty.columns___7OxJ)}>
                <div className={classNames(projectcss.all, sty.column___8FyW)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ctPzS
                    )}
                  >
                    {"READY TO START?"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__crBb
                    )}
                  >
                    {
                      "Together, let’s ensure your company\nis full of capable and happy employees\nwho thrive at their jobs."
                    }
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zdvLo)}
                  >
                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button__nZYl
                      )}
                    >
                      {"BOOK A DEMO"}
                    </button>

                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button___6QqS
                      )}
                    >
                      {"GET STARTED"}
                    </button>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__uygWz)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zn9Wp)}
                    displayHeight={"370px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"220px"}
                    loading={"lazy"}
                    src={{
                      src: phoneCutManagerspngRiB9WdHzJ,
                      fullWidth: 430,
                      fullHeight: 742,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </div>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "menuHeaderDesktop", "hero", "h1", "section2", "footer"],
  menuHeaderDesktop: ["menuHeaderDesktop"],
  hero: ["hero", "h1"],
  h1: ["h1"],
  section2: ["section2"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicWhoIsItForManagers__ArgProps,
          internalVariantPropNames: PlasmicWhoIsItForManagers__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicWhoIsItForManagers__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicWhoIsItForManagers";
  } else {
    func.displayName = `PlasmicWhoIsItForManagers.${nodeName}`;
  }
  return func;
}

export const PlasmicWhoIsItForManagers = Object.assign(
  // Top-level PlasmicWhoIsItForManagers renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    menuHeaderDesktop: makeNodeComponent("menuHeaderDesktop"),
    hero: makeNodeComponent("hero"),
    h1: makeNodeComponent("h1"),
    section2: makeNodeComponent("section2"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicWhoIsItForManagers
    internalVariantProps: PlasmicWhoIsItForManagers__VariantProps,
    internalArgProps: PlasmicWhoIsItForManagers__ArgProps
  }
);

export default PlasmicWhoIsItForManagers;
/* prettier-ignore-end */
